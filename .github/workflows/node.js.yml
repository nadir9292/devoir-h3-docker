# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code, run tests across different versions of node and start Docker Compose
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - run: npm ci
      - run: npm run build --if-present
      - run: npm test
      - name: Docker Login
        uses: docker/login-action@v1
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and Tag Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/my-docker-image:${{ github.sha }} .
          docker tag ${{ secrets.DOCKER_USERNAME }}/my-docker-image:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/my-docker-image:latest
      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/my-docker-image:${{ github.sha }}
          docker push ${{ secrets.DOCKER_USERNAME }}/my-docker-image:latest
      - name: Start Docker Compose
        run: docker-compose up --build -d
